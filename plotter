# %%
import numpy as np
import pickle
import numpy
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick
from matplotlib import pyplot as plt
from matplotlib.font_manager import FontProperties

# %%
pbse=(r'G:\My Drive\Python Scripts\VMPC\vmpc_new_set_102124\data\datfile_')

# %%
def mov_med(rcat,mds=60*3):
    ccc=[]
    # mds=60*3
    for i in range(len(rcat)):
        if i<mds:
            ccc.append(np.median(rcat[0:i]))
        else:
            ccc.append(np.median(rcat[i-mds:i]))
    return ccc


def mov_mean(rcat,mds=60*3):
    ccc=[]
    # mds=60*3
    for i in range(len(rcat)):
        if i<mds:
            ccc.append(np.mean(rcat[0:i]))
        else:
            ccc.append(np.mean(rcat[i-mds:i]))
    return ccc


# %%

# nam_con="ep_1000_12202024_siso"
# pfile=(r"G:\My Drive\Python Scripts\conf_set\data\buffile_"+nam_con+".pkl")
# with open(pfile, "rb") as pkl_rb_obj:
#         buffile = pickle.load(pkl_rb_obj)  
# pfile=(r"G:\My Drive\Python Scripts\conf_set\data\datfile_"+nam_con+".pkl")
#     with open(pfile, "wb") as pkl_wb_obj:
#         pickle.dump(datfile,pkl_wb_obj)


# nam_con="OL_NoDecay"   #OL decay
# pfile=(pbse +nam_con+".pkl")
# # pfile=(r"C:\Users\dpb0008\Documents\Python Scripts\data\datfile_"+nam_con+".pkl")
# with open(pfile, "rb") as pkl_rb_obj:
# 	dataND = pickle.load(pkl_rb_obj)


# 01152025
# nam_con="ep_100_12202024_siso"
# nam_con="ep_1000_12202024_siso"

# nam_con="ep_500_01122025_miso_good"
# nam_con="ep_500_01122025_miso_ok"

# nam_con="ep_500_01132025_special_train"
# nam_con="ep_500_01132025_special_train_standard"


# nam_con="ep_500_01132025_loadbuff_special_train"
# nam_con="ep_500_01132025_loadbuff_special_train_standard"




# nam_con="ep_500_01132025_reward_focus_special_train"
# nam_con="ep_500_01132025_reward_focus_special_train_strandard"
# nam_con="ep_500_01182025_special exploration"


# nam_con="ep_500_01212025_standard_10grp"
# nam_con="ep_500_01212025_reward_10grp"
# nam_con="ep_500_01212025_explore_10grp"
# nam_con="ep_500_01212025_explore_10grp"


# datfile=[xcat, ycat, ucat, rcat, rvg_cat, loss1,loss2]

nam_con="ep_500_01212025_standard_10grp"
pfile=(r"G:\My Drive\Python Scripts\conf_set\data\datfile_"+nam_con+".pkl")
with open(pfile, "rb") as pkl_rb_obj:
        dataS = pickle.load(pkl_rb_obj)  


nam_con="ep_500_01212025_reward_10grp"
pfile=(r"G:\My Drive\Python Scripts\conf_set\data\datfile_"+nam_con+".pkl")
with open(pfile, "rb") as pkl_rb_obj:
        dataR = pickle.load(pkl_rb_obj)  


nam_con="ep_500_01212025_explore_10grp"
pfile=(r"G:\My Drive\Python Scripts\conf_set\data\datfile_"+nam_con+".pkl")
with open(pfile, "rb") as pkl_rb_obj:
        dataE = pickle.load(pkl_rb_obj)  


nam_con="ep_500_01212025_both_10grp"
pfile=(r"G:\My Drive\Python Scripts\conf_set\data\datfile_"+nam_con+".pkl")
with open(pfile, "rb") as pkl_rb_obj:
        dataRE = pickle.load(pkl_rb_obj)  

# %%

loss1=dataS[5]
loss2=dataS[6]
rcat=dataS[3]
Ml1S=mov_mean(loss1,65*5)
Ml2S=mov_mean(loss2,65*5)
rvgS=mov_med(rcat,65*3)

loss1=dataR[5]
loss2=dataR[6]
rcat=dataR[3]
Ml1R=mov_mean(loss1,65*5)
Ml2R=mov_mean(loss2,65*5)
rvgR=mov_med(rcat,65*3)

loss1=dataE[5]
loss2=dataE[6]
rcat=dataE[3]
Ml1E=mov_mean(loss1,65*5)
Ml2E=mov_mean(loss2,65*5)
rvgE=mov_med(rcat,65*3)

loss1=dataRE[5]
loss2=dataRE[6]
rcat=dataRE[3]
Ml1RE=mov_mean(loss1,65*5)
Ml2RE=mov_mean(loss2,65*5)
rvgRE=mov_med(rcat,65*3)


# %%
# plt.figure()
# plt.plot(loss1)
# plt.plot(Ml1)
# plt.title('Critic')
# plt.figure()
# plt.plot(loss2)
# plt.plot(Ml2)
# plt.title('Actor')

# plt.figure()
# plt.plot(rcat)
# plt.plot(rvg)


# plt.figure()
# # plt.plot(loss1)
# plt.plot(-np.array(Ml1))
# plt.plot(-np.array(Ml12))
# plt.title('Critic')
# plt.ylim([-500,1])



# %%




plt.figure()
# plt.plot(loss1)
plt.plot(-np.array(Ml1S), label="Standard")
plt.plot(-np.array(Ml1E), label="Explore")
plt.plot(-np.array(Ml1R), label="Reward")
plt.plot(-np.array(Ml1RE), label="Both")
plt.title('Critic')
# plt.ylim([-300,5])
plt.legend()


# %%

plt.figure()
# plt.plot(loss1)
plt.plot(np.array(Ml2S), label="Standard")
plt.plot(np.array(Ml2E), label="Explore")
plt.plot(np.array(Ml2R), label="Reward")
plt.plot(np.array(Ml2RE), label="Both")
plt.title('Actor')
# plt.ylim([-300,5])
plt.legend()

# %%

plt.figure()
# plt.plot(loss1)
plt.plot(np.array(rvgS), label="Standard")
plt.plot(np.array(rvgE), label="Explore")
plt.plot(np.array(rvgR), label="Reward")
plt.plot(np.array(rvgRE), label="Both")
plt.title('Reward')
# plt.ylim([-300,5])
plt.legend()

